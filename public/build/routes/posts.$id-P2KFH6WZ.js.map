{
  "version": 3,
  "sources": ["../../../app/routes/posts.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/posts.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/posts.$id.tsx\");\n  import.meta.hot.lastModified = \"1713569899195.49\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getPost } from \"~/data\";\nexport const loader = async ({\n  params: {\n    id\n  }\n}) => {\n  const {\n    data\n  } = await getPost(id);\n  return json({\n    post: data.post\n  });\n};\nexport default function Page() {\n  _s();\n  const {\n    post\n  } = useLoaderData();\n  return <div style={{\n    fontFamily: \"system-ui, sans-serif\",\n    lineHeight: \"1.8\"\n  }}>\n      <article>\n        <header><h1>{post.title}</h1></header>\n        <div>\n          <img src={post.coverImage.url} alt={post.coverImage.fileName} width=\"150\" height=\"150\" />\n        </div>\n        <p>{post.content}</p>\n      </article>\n\n    </div>;\n}\n_s(Page, \"XKKHaSRpeA70aITHb2nxIAbZ33A=\", false, function () {\n  return [useLoaderData];\n});\n_c = Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAyBL;AA7ChB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+BAAiC,EAAE;AAAA,EAC5E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0B;AAC1B,cAAY,IAAI,eAAe;AACjC;AAkBe,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA,EACd,GACI,6DAAC,aACC;AAAA,uDAAC,YAAO,6DAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,WAAgB,KAAxB;AAAA;AAAA;AAAA;AAAA,WAA6B;AAAA,IAC7B,mDAAC,SACC,6DAAC,SAAI,KAAK,KAAK,WAAW,KAAK,KAAK,KAAK,WAAW,UAAU,OAAM,OAAM,QAAO,SAAjF;AAAA;AAAA;AAAA;AAAA,WAAuF,KADzF;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,OAAG,eAAK,WAAT;AAAA;AAAA;AAAA;AAAA,WAAiB;AAAA,OALnB;AAAA;AAAA;AAAA;AAAA,SAMA,KAVG;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,MAAM,gCAAgC,OAAO,WAAY;AAC1D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,MAAM;AAEvB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
